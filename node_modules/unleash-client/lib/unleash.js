"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Unleash = exports.UnleashEvents = exports.Strategy = void 0;
var os_1 = require("os");
var events_1 = require("events");
var client_1 = require("./client");
var repository_1 = require("./repository");
var metrics_1 = require("./metrics");
var strategy_1 = require("./strategy");
Object.defineProperty(exports, "Strategy", { enumerable: true, get: function () { return strategy_1.Strategy; } });
var variant_1 = require("./variant");
var helpers_1 = require("./helpers");
var bootstrap_provider_1 = require("./repository/bootstrap-provider");
var storage_provider_1 = require("./repository/storage-provider");
var events_2 = require("./events");
Object.defineProperty(exports, "UnleashEvents", { enumerable: true, get: function () { return events_2.UnleashEvents; } });
var BACKUP_PATH = (0, os_1.tmpdir)();
var Unleash = /** @class */ (function (_super) {
    __extends(Unleash, _super);
    function Unleash(_a) {
        var appName = _a.appName, _b = _a.environment, environment = _b === void 0 ? 'default' : _b, projectName = _a.projectName, instanceId = _a.instanceId, url = _a.url, _c = _a.refreshInterval, refreshInterval = _c === void 0 ? 15 * 1000 : _c, _d = _a.metricsInterval, metricsInterval = _d === void 0 ? 60 * 1000 : _d, _e = _a.disableMetrics, disableMetrics = _e === void 0 ? false : _e, _f = _a.backupPath, backupPath = _f === void 0 ? BACKUP_PATH : _f, _g = _a.strategies, strategies = _g === void 0 ? [] : _g, repository = _a.repository, namePrefix = _a.namePrefix, customHeaders = _a.customHeaders, customHeadersFunction = _a.customHeadersFunction, timeout = _a.timeout, httpOptions = _a.httpOptions, tags = _a.tags, _h = _a.bootstrap, bootstrap = _h === void 0 ? {} : _h, bootstrapOverride = _a.bootstrapOverride, storageProvider = _a.storageProvider, _j = _a.disableAutoStart, disableAutoStart = _j === void 0 ? false : _j;
        var _this = _super.call(this) || this;
        _this.synchronized = false;
        _this.ready = false;
        if (!url) {
            throw new Error('Unleash API "url" is required');
        }
        if (!appName) {
            throw new Error('Unleash client "appName" is required');
        }
        var unleashUrl = _this.cleanUnleashUrl(url);
        var unleashInstanceId = (0, helpers_1.generateInstanceId)(instanceId);
        _this.staticContext = { appName: appName, environment: environment };
        var bootstrapProvider = (0, bootstrap_provider_1.resolveBootstrapProvider)(bootstrap, appName, unleashInstanceId);
        _this.repository =
            repository ||
                new repository_1.default({
                    projectName: projectName,
                    url: unleashUrl,
                    appName: appName,
                    instanceId: unleashInstanceId,
                    refreshInterval: refreshInterval,
                    headers: customHeaders,
                    customHeadersFunction: customHeadersFunction,
                    timeout: timeout,
                    httpOptions: httpOptions,
                    namePrefix: namePrefix,
                    tags: tags,
                    bootstrapProvider: bootstrapProvider,
                    bootstrapOverride: bootstrapOverride,
                    storageProvider: storageProvider || new storage_provider_1.FileStorageProvider(backupPath),
                });
        _this.repository.on(events_2.UnleashEvents.Ready, function () {
            _this.ready = true;
            process.nextTick(function () {
                _this.emit(events_2.UnleashEvents.Ready);
            });
        });
        _this.repository.on(events_2.UnleashEvents.Error, function (err) {
            // eslint-disable-next-line no-param-reassign
            err.message = "Unleash Repository error: ".concat(err.message);
            _this.emit(events_2.UnleashEvents.Error, err);
        });
        _this.repository.on(events_2.UnleashEvents.Warn, function (msg) { return _this.emit(events_2.UnleashEvents.Warn, msg); });
        _this.repository.on(events_2.UnleashEvents.Changed, function (data) {
            _this.emit(events_2.UnleashEvents.Changed, data);
            // Only emit the fully synchronized event the first time.
            if (!_this.synchronized) {
                _this.synchronized = true;
                process.nextTick(function () { return _this.emit(events_2.UnleashEvents.Synchronized); });
            }
        });
        // setup client
        var supportedStrategies = strategies.concat(strategy_1.defaultStrategies);
        _this.client = new client_1.default(_this.repository, supportedStrategies);
        _this.client.on(events_2.UnleashEvents.Error, function (err) { return _this.emit(events_2.UnleashEvents.Error, err); });
        _this.client.on(events_2.UnleashEvents.Impression, function (e) {
            return _this.emit(events_2.UnleashEvents.Impression, e);
        });
        _this.metrics = new metrics_1.default({
            disableMetrics: disableMetrics,
            appName: appName,
            instanceId: unleashInstanceId,
            strategies: supportedStrategies.map(function (strategy) { return strategy.name; }),
            metricsInterval: metricsInterval,
            url: unleashUrl,
            headers: customHeaders,
            customHeadersFunction: customHeadersFunction,
            timeout: timeout,
            httpOptions: httpOptions,
        });
        _this.metrics.on(events_2.UnleashEvents.Error, function (err) {
            // eslint-disable-next-line no-param-reassign
            err.message = "Unleash Metrics error: ".concat(err.message);
            _this.emit(events_2.UnleashEvents.Error, err);
        });
        _this.metrics.on(events_2.UnleashEvents.Warn, function (msg) { return _this.emit(events_2.UnleashEvents.Warn, msg); });
        _this.metrics.on(events_2.UnleashEvents.Sent, function (payload) { return _this.emit(events_2.UnleashEvents.Sent, payload); });
        _this.metrics.on(events_2.UnleashEvents.Count, function (name, enabled) {
            _this.emit(events_2.UnleashEvents.Count, name, enabled);
        });
        _this.metrics.on(events_2.UnleashEvents.Registered, function (payload) {
            _this.emit(events_2.UnleashEvents.Registered, payload);
        });
        if (!disableAutoStart) {
            process.nextTick(function () { return __awaiter(_this, void 0, void 0, function () { return __generator(this, function (_a) {
                return [2 /*return*/, this.start()];
            }); }); });
        }
        return _this;
    }
    Unleash.prototype.cleanUnleashUrl = function (url) {
        var _this = this;
        var unleashUrl = url;
        if (unleashUrl.endsWith('/features')) {
            var oldUrl_1 = unleashUrl;
            process.nextTick(function () {
                return _this.emit(events_2.UnleashEvents.Warn, "Unleash server URL \"".concat(oldUrl_1, "\" should no longer link directly to /features"));
            });
            unleashUrl = unleashUrl.replace(/\/features$/, '');
        }
        if (!unleashUrl.endsWith('/')) {
            unleashUrl += '/';
        }
        return unleashUrl;
    };
    Unleash.prototype.start = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Promise.all([this.repository.start(), this.metrics.start()])];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Unleash.prototype.destroy = function () {
        this.repository.stop();
        this.metrics.stop();
    };
    Unleash.prototype.isEnabled = function (name, context, fallback) {
        if (context === void 0) { context = {}; }
        var enhancedContext = __assign(__assign({}, this.staticContext), context);
        var fallbackFunc = (0, helpers_1.createFallbackFunction)(name, enhancedContext, fallback);
        var result;
        if (this.ready) {
            result = this.client.isEnabled(name, enhancedContext, fallbackFunc);
        }
        else {
            result = fallbackFunc();
            this.emit(events_2.UnleashEvents.Warn, "Unleash has not been initialized yet. isEnabled(".concat(name, ") defaulted to ").concat(result));
        }
        this.count(name, result);
        return result;
    };
    Unleash.prototype.getVariant = function (name, context, fallbackVariant) {
        if (context === void 0) { context = {}; }
        var enhancedContext = __assign(__assign({}, this.staticContext), context);
        var result;
        if (this.ready) {
            result = this.client.getVariant(name, enhancedContext, fallbackVariant);
        }
        else {
            result = typeof fallbackVariant !== 'undefined' ? fallbackVariant : (0, variant_1.getDefaultVariant)();
            this.emit(events_2.UnleashEvents.Warn, "Unleash has not been initialized yet. isEnabled(".concat(name, ") defaulted to ").concat(result));
        }
        if (result.name) {
            this.countVariant(name, result.name);
        }
        this.count(name, result.enabled);
        return result;
    };
    Unleash.prototype.forceGetVariant = function (name, context, fallbackVariant) {
        if (context === void 0) { context = {}; }
        var enhancedContext = __assign(__assign({}, this.staticContext), context);
        var result;
        if (this.ready) {
            result = this.client.forceGetVariant(name, enhancedContext, fallbackVariant);
        }
        else {
            result = typeof fallbackVariant !== 'undefined' ? fallbackVariant : (0, variant_1.getDefaultVariant)();
            this.emit(events_2.UnleashEvents.Warn, "Unleash has not been initialized yet. isEnabled(".concat(name, ") defaulted to ").concat(result));
        }
        if (result.name) {
            this.countVariant(name, result.name);
        }
        this.count(name, result.enabled);
        return result;
    };
    Unleash.prototype.getFeatureToggleDefinition = function (toggleName) {
        return this.repository.getToggle(toggleName);
    };
    Unleash.prototype.getFeatureToggleDefinitions = function () {
        return this.repository.getToggles();
    };
    Unleash.prototype.count = function (toggleName, enabled) {
        this.metrics.count(toggleName, enabled);
    };
    Unleash.prototype.countVariant = function (toggleName, variantName) {
        this.metrics.countVariant(toggleName, variantName);
    };
    return Unleash;
}(events_1.EventEmitter));
exports.Unleash = Unleash;
//# sourceMappingURL=unleash.js.map