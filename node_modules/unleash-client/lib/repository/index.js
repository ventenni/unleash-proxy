"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = require("events");
var request_1 = require("../request");
var url_utils_1 = require("../url-utils");
var events_2 = require("../events");
var SUPPORTED_SPEC_VERSION = '4.2.0';
var Repository = /** @class */ (function (_super) {
    __extends(Repository, _super);
    function Repository(_a) {
        var url = _a.url, appName = _a.appName, instanceId = _a.instanceId, projectName = _a.projectName, _b = _a.refreshInterval, refreshInterval = _b === void 0 ? 15000 : _b, timeout = _a.timeout, headers = _a.headers, customHeadersFunction = _a.customHeadersFunction, httpOptions = _a.httpOptions, namePrefix = _a.namePrefix, tags = _a.tags, bootstrapProvider = _a.bootstrapProvider, _c = _a.bootstrapOverride, bootstrapOverride = _c === void 0 ? true : _c, storageProvider = _a.storageProvider;
        var _this = _super.call(this) || this;
        _this.stopped = false;
        _this.ready = false;
        _this.connected = false;
        _this.data = {};
        _this.url = url;
        _this.refreshInterval = refreshInterval;
        _this.instanceId = instanceId;
        _this.appName = appName;
        _this.projectName = projectName;
        _this.headers = headers;
        _this.timeout = timeout;
        _this.customHeadersFunction = customHeadersFunction;
        _this.httpOptions = httpOptions;
        _this.namePrefix = namePrefix;
        _this.tags = tags;
        _this.bootstrapProvider = bootstrapProvider;
        _this.bootstrapOverride = bootstrapOverride;
        _this.storageProvider = storageProvider;
        _this.segments = new Map();
        return _this;
    }
    Repository.prototype.timedFetch = function () {
        var _this = this;
        if (this.refreshInterval > 0) {
            this.timer = setTimeout(function () { return _this.fetch(); }, this.refreshInterval);
            if (process.env.NODE_ENV !== 'test' && typeof this.timer.unref === 'function') {
                this.timer.unref();
            }
        }
    };
    Repository.prototype.validateFeature = function (feature) {
        var errors = [];
        if (!Array.isArray(feature.strategies)) {
            errors.push("feature.strategies should be an array, but was ".concat(typeof feature.strategies));
        }
        if (feature.variants && !Array.isArray(feature.variants)) {
            errors.push("feature.variants should be an array, but was ".concat(typeof feature.variants));
        }
        if (typeof feature.enabled !== 'boolean') {
            errors.push("feature.enabled should be an boolean, but was ".concat(typeof feature.enabled));
        }
        if (errors.length > 0) {
            var err = new Error(errors.join(', '));
            this.emit(events_2.UnleashEvents.Error, err);
        }
    };
    Repository.prototype.start = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Promise.all([this.fetch(), this.loadBackup(), this.loadBootstrap()])];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Repository.prototype.loadBackup = function () {
        return __awaiter(this, void 0, void 0, function () {
            var content, err_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.storageProvider.get(this.appName)];
                    case 1:
                        content = _a.sent();
                        if (this.ready) {
                            return [2 /*return*/];
                        }
                        if (content && this.notEmpty(content)) {
                            this.data = this.convertToMap(content.features);
                            this.segments = this.createSegmentLookup(content.segments);
                            this.setReady();
                        }
                        return [3 /*break*/, 3];
                    case 2:
                        err_1 = _a.sent();
                        this.emit(events_2.UnleashEvents.Error, err_1);
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    Repository.prototype.setReady = function () {
        var _this = this;
        var doEmitReady = this.ready === false;
        this.ready = true;
        if (doEmitReady) {
            process.nextTick(function () {
                _this.emit(events_2.UnleashEvents.Ready);
            });
        }
    };
    Repository.prototype.createSegmentLookup = function (segments) {
        if (!segments) {
            return new Map();
        }
        return new Map(segments.map(function (segment) { return [segment.id, segment]; }));
    };
    Repository.prototype.save = function (response, fromApi) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (fromApi) {
                            this.connected = true;
                            this.data = this.convertToMap(response.features);
                            this.segments = this.createSegmentLookup(response.segments);
                        }
                        else if (!this.connected) {
                            // Only allow bootstrap if not connected
                            this.data = this.convertToMap(response.features);
                            this.segments = this.createSegmentLookup(response.segments);
                        }
                        this.setReady();
                        this.emit(events_2.UnleashEvents.Changed, __spreadArray([], __read(response.features), false));
                        return [4 /*yield*/, this.storageProvider.set(this.appName, response)];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Repository.prototype.notEmpty = function (content) {
        return content.features.length > 0;
    };
    Repository.prototype.loadBootstrap = function () {
        return __awaiter(this, void 0, void 0, function () {
            var content, err_2;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 4, , 5]);
                        return [4 /*yield*/, this.bootstrapProvider.readBootstrap()];
                    case 1:
                        content = _a.sent();
                        if (!this.bootstrapOverride && this.ready) {
                            // early exit if we already have backup data and should not override it.
                            return [2 /*return*/];
                        }
                        if (!(content && this.notEmpty(content))) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.save(content, false)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3: return [3 /*break*/, 5];
                    case 4:
                        err_2 = _a.sent();
                        this.emit(events_2.UnleashEvents.Warn, "Unleash SDK was unable to load bootstrap.\nMessage: ".concat(err_2.message));
                        return [3 /*break*/, 5];
                    case 5: return [2 /*return*/];
                }
            });
        });
    };
    Repository.prototype.convertToMap = function (features) {
        var _this = this;
        var obj = features.reduce(function (o, feature) {
            var a = __assign({}, o);
            _this.validateFeature(feature);
            a[feature.name] = feature;
            return a;
        }, {});
        return obj;
    };
    Repository.prototype.fetch = function () {
        return __awaiter(this, void 0, void 0, function () {
            var mergedTags, url, headers, _a, res, error, data, err_3, err_4;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (this.stopped || !(this.refreshInterval > 0)) {
                            return [2 /*return*/];
                        }
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 12, 13, 14]);
                        mergedTags = void 0;
                        if (this.tags) {
                            mergedTags = this.mergeTagsToStringArray(this.tags);
                        }
                        url = (0, url_utils_1.default)(this.url, this.projectName, this.namePrefix, mergedTags);
                        if (!this.customHeadersFunction) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.customHeadersFunction()];
                    case 2:
                        _a = _b.sent();
                        return [3 /*break*/, 4];
                    case 3:
                        _a = this.headers;
                        _b.label = 4;
                    case 4:
                        headers = _a;
                        return [4 /*yield*/, (0, request_1.get)({
                                url: url,
                                etag: this.etag,
                                appName: this.appName,
                                timeout: this.timeout,
                                instanceId: this.instanceId,
                                headers: headers,
                                httpOptions: this.httpOptions,
                                supportedSpecVersion: SUPPORTED_SPEC_VERSION,
                            })];
                    case 5:
                        res = _b.sent();
                        if (!(res.status === 304)) return [3 /*break*/, 6];
                        // No new data
                        this.emit(events_2.UnleashEvents.Unchanged);
                        return [3 /*break*/, 11];
                    case 6:
                        if (!!res.ok) return [3 /*break*/, 7];
                        error = new Error("Response was not statusCode 2XX, but was ".concat(res.status));
                        this.emit(events_2.UnleashEvents.Error, error);
                        return [3 /*break*/, 11];
                    case 7:
                        _b.trys.push([7, 10, , 11]);
                        return [4 /*yield*/, res.json()];
                    case 8:
                        data = _b.sent();
                        if (res.headers.get('etag') !== null) {
                            this.etag = res.headers.get('etag');
                        }
                        else {
                            this.etag = undefined;
                        }
                        return [4 /*yield*/, this.save(data, true)];
                    case 9:
                        _b.sent();
                        return [3 /*break*/, 11];
                    case 10:
                        err_3 = _b.sent();
                        this.emit(events_2.UnleashEvents.Error, err_3);
                        return [3 /*break*/, 11];
                    case 11: return [3 /*break*/, 14];
                    case 12:
                        err_4 = _b.sent();
                        this.emit(events_2.UnleashEvents.Error, err_4);
                        return [3 /*break*/, 14];
                    case 13:
                        this.timedFetch();
                        return [7 /*endfinally*/];
                    case 14: return [2 /*return*/];
                }
            });
        });
    };
    Repository.prototype.mergeTagsToStringArray = function (tags) {
        return tags.map(function (tag) { return "".concat(tag.name, ":").concat(tag.value); });
    };
    Repository.prototype.stop = function () {
        this.stopped = true;
        if (this.timer) {
            clearTimeout(this.timer);
        }
        this.removeAllListeners();
    };
    Repository.prototype.getSegment = function (segmentId) {
        return this.segments.get(segmentId);
    };
    Repository.prototype.getToggle = function (name) {
        return this.data[name];
    };
    Repository.prototype.getToggles = function () {
        var _this = this;
        return Object.keys(this.data).map(function (key) { return _this.data[key]; });
    };
    return Repository;
}(events_1.EventEmitter));
exports.default = Repository;
//# sourceMappingURL=index.js.map