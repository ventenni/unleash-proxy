"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var events_1 = require("events");
var url_1 = require("url");
var request_1 = require("./request");
var details_json_1 = require("./details.json");
var url_utils_1 = require("./url-utils");
var events_2 = require("./events");
var Metrics = /** @class */ (function (_super) {
    __extends(Metrics, _super);
    function Metrics(_a) {
        var appName = _a.appName, instanceId = _a.instanceId, strategies = _a.strategies, _b = _a.metricsInterval, metricsInterval = _b === void 0 ? 0 : _b, _c = _a.disableMetrics, disableMetrics = _c === void 0 ? false : _c, url = _a.url, headers = _a.headers, customHeadersFunction = _a.customHeadersFunction, timeout = _a.timeout, httpOptions = _a.httpOptions;
        var _this = _super.call(this) || this;
        _this.disabled = disableMetrics;
        _this.metricsInterval = metricsInterval;
        _this.appName = appName;
        _this.instanceId = instanceId;
        _this.sdkVersion = details_json_1.sdkVersion;
        _this.strategies = strategies;
        _this.url = url;
        _this.headers = headers;
        _this.customHeadersFunction = customHeadersFunction;
        _this.started = new Date();
        _this.timeout = timeout;
        _this.resetBucket();
        _this.httpOptions = httpOptions;
        return _this;
    }
    Metrics.prototype.startTimer = function () {
        var _this = this;
        if (this.disabled) {
            return false;
        }
        this.timer = setTimeout(function () {
            _this.sendMetrics();
        }, this.metricsInterval);
        if (process.env.NODE_ENV !== 'test' && typeof this.timer.unref === 'function') {
            this.timer.unref();
        }
        return true;
    };
    Metrics.prototype.start = function () {
        if (typeof this.metricsInterval === 'number' && this.metricsInterval > 0) {
            this.startTimer();
            this.registerInstance();
        }
    };
    Metrics.prototype.stop = function () {
        if (this.timer) {
            clearInterval(this.timer);
            delete this.timer;
        }
        this.disabled = true;
    };
    Metrics.prototype.registerInstance = function () {
        return __awaiter(this, void 0, void 0, function () {
            var url, payload, headers, _a, res, _b, _c, err_1;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        if (this.disabled) {
                            return [2 /*return*/, false];
                        }
                        url = (0, url_1.resolve)((0, url_utils_1.suffixSlash)(this.url), './client/register');
                        payload = this.getClientData();
                        if (!this.customHeadersFunction) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.customHeadersFunction()];
                    case 1:
                        _a = _d.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        _a = this.headers;
                        _d.label = 3;
                    case 3:
                        headers = _a;
                        _d.label = 4;
                    case 4:
                        _d.trys.push([4, 9, , 10]);
                        return [4 /*yield*/, (0, request_1.post)({
                                url: url,
                                json: payload,
                                appName: this.appName,
                                instanceId: this.instanceId,
                                headers: headers,
                                timeout: this.timeout,
                                httpOptions: this.httpOptions,
                            })];
                    case 5:
                        res = _d.sent();
                        if (!!res.ok) return [3 /*break*/, 7];
                        // status code outside 200 range
                        _b = this.emit;
                        _c = [events_2.UnleashEvents.Warn, "".concat(url, " returning ").concat(res.status)];
                        return [4 /*yield*/, res.text()];
                    case 6:
                        // status code outside 200 range
                        _b.apply(this, _c.concat([_d.sent()]));
                        return [3 /*break*/, 8];
                    case 7:
                        this.emit(events_2.UnleashEvents.Registered, payload);
                        _d.label = 8;
                    case 8: return [3 /*break*/, 10];
                    case 9:
                        err_1 = _d.sent();
                        this.emit(events_2.UnleashEvents.Error, err_1);
                        return [3 /*break*/, 10];
                    case 10: return [2 /*return*/, true];
                }
            });
        });
    };
    Metrics.prototype.sendMetrics = function () {
        return __awaiter(this, void 0, void 0, function () {
            var url, payload, headers, _a, res, _b, _c, err_2;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        if (this.disabled) {
                            return [2 /*return*/, false];
                        }
                        if (this.bucketIsEmpty()) {
                            this.resetBucket();
                            this.startTimer();
                            return [2 /*return*/, true];
                        }
                        url = (0, url_1.resolve)((0, url_utils_1.suffixSlash)(this.url), './client/metrics');
                        payload = this.getPayload();
                        if (!this.customHeadersFunction) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.customHeadersFunction()];
                    case 1:
                        _a = _d.sent();
                        return [3 /*break*/, 3];
                    case 2:
                        _a = this.headers;
                        _d.label = 3;
                    case 3:
                        headers = _a;
                        _d.label = 4;
                    case 4:
                        _d.trys.push([4, 9, , 10]);
                        return [4 /*yield*/, (0, request_1.post)({
                                url: url,
                                json: payload,
                                appName: this.appName,
                                instanceId: this.instanceId,
                                headers: headers,
                                timeout: this.timeout,
                                httpOptions: this.httpOptions,
                            })];
                    case 5:
                        res = _d.sent();
                        this.startTimer();
                        if (res.status === 404) {
                            this.emit(events_2.UnleashEvents.Warn, "".concat(url, " returning 404, stopping metrics"));
                            this.stop();
                        }
                        if (!!res.ok) return [3 /*break*/, 7];
                        _b = this.emit;
                        _c = [events_2.UnleashEvents.Warn, "".concat(url, " returning ").concat(res.status)];
                        return [4 /*yield*/, res.text()];
                    case 6:
                        _b.apply(this, _c.concat([_d.sent()]));
                        return [3 /*break*/, 8];
                    case 7:
                        this.emit(events_2.UnleashEvents.Sent, payload);
                        _d.label = 8;
                    case 8: return [3 /*break*/, 10];
                    case 9:
                        err_2 = _d.sent();
                        this.emit(events_2.UnleashEvents.Error, err_2);
                        this.startTimer();
                        return [3 /*break*/, 10];
                    case 10: return [2 /*return*/, true];
                }
            });
        });
    };
    Metrics.prototype.assertBucket = function (name) {
        if (this.disabled || !this.bucket) {
            return false;
        }
        if (!this.bucket.toggles[name]) {
            this.bucket.toggles[name] = {
                yes: 0,
                no: 0,
            };
        }
        return true;
    };
    Metrics.prototype.count = function (name, enabled) {
        if (this.disabled || !this.bucket) {
            return false;
        }
        this.assertBucket(name);
        this.bucket.toggles[name][enabled ? 'yes' : 'no']++;
        this.emit(events_2.UnleashEvents.Count, name, enabled);
        return true;
    };
    Metrics.prototype.countVariant = function (name, variantName) {
        var _a;
        if (this.disabled || !this.bucket) {
            return false;
        }
        this.assertBucket(name);
        var variants = this.bucket.toggles[name].variants;
        if (typeof variants !== 'undefined') {
            if (!variants[variantName]) {
                variants[variantName] = 1;
            }
            else {
                variants[variantName]++;
            }
        }
        else {
            this.bucket.toggles[name].variants = (_a = {},
                _a[variantName] = 1,
                _a);
        }
        this.emit(events_2.UnleashEvents.CountVariant, name, variantName);
        return true;
    };
    Metrics.prototype.bucketIsEmpty = function () {
        if (!this.bucket) {
            return false;
        }
        return Object.keys(this.bucket.toggles).length === 0;
    };
    Metrics.prototype.resetBucket = function () {
        var bucket = {
            start: new Date(),
            stop: null,
            toggles: {},
        };
        this.bucket = bucket;
    };
    Metrics.prototype.closeBucket = function () {
        if (this.bucket) {
            this.bucket.stop = new Date();
        }
    };
    Metrics.prototype.getPayload = function () {
        this.closeBucket();
        var payload = this.getMetricsData();
        this.resetBucket();
        return payload;
    };
    Metrics.prototype.getClientData = function () {
        return {
            appName: this.appName,
            instanceId: this.instanceId,
            sdkVersion: this.sdkVersion,
            strategies: this.strategies,
            started: this.started,
            interval: this.metricsInterval,
        };
    };
    Metrics.prototype.getMetricsData = function () {
        return {
            appName: this.appName,
            instanceId: this.instanceId,
            bucket: this.bucket,
        };
    };
    return Metrics;
}(events_1.EventEmitter));
exports.default = Metrics;
//# sourceMappingURL=metrics.js.map